
services:

  db:
    container_name: db
    image: postgres:latest
    init: true
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust

  redis:
    container_name: redis
    image: redis:7.0
    init: true
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data

  web:
    container_name: web
    image: epicserve/django-base-site:python
    init: true
    build:
      context: .
      target: dev
      dockerfile: config/docker/Dockerfile.web

    command: sh -c "./manage.py migrate --noinput && ./manage.py runserver 0.0.0.0:8000"

    volumes:
      - .:/srv/app:cached

    ports:
      - "8000:8000"

    depends_on:
      - node
      - db
      - redis

    environment:
      USE_DOCKER: 'on'
      DJANGO_SETTINGS_MODULE: config.settings

  worker:
    container_name: worker
    image: epicserve/django-base-site:python
    init: true

    command: sh -c "celery -A config worker -l info"

    volumes:
      - .:/srv/app:cached

    depends_on:
      - web

    environment:
      DJANGO_SETTINGS_MODULE: config.settings

  node:
    container_name: node
    image: epicserve/django-base-site:node
    build:
      context: .
      dockerfile: config/docker/Dockerfile.node
    init: true
    working_dir: /srv/app

    command: sh -c "npm run dev"

    volumes:
      - .:/srv/app
      - /srv/app/node_modules

    ports:
      - "3000:3000"

    environment:
      NODE_ENV: development

  docs:
    container_name: docs
    image: epicserve/django-base-site:latest
    init: true

    command: sh -c "mkdocs serve -f config/mkdocs.yml --dev-addr 0.0.0.0:4000"

    volumes:
      - .:/srv/app:cached

    ports:
      - "4000:4000"

    environment:
      LIVE_RELOAD_SUPPORT: 'true'
      FAST_MODE: 'true'

    profiles: ["docs"]

    depends_on:
      - web

volumes:
  postgres_data:
  redis_data:

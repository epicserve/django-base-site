name: Upgrade Python Packages

on:
  schedule:
    - cron: '0 0 * * 0'  # Run every Sunday at midnight
  workflow_dispatch:
  push:
    branches:
      - feature/upgrade-packages-action

jobs:
  create_pr:
    runs-on: ubuntu-latest

    outputs:
      upgrades: ${{ steps.diff.outputs.upgrades }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Run just upgrade_python_packages
      run: |
        pip install --upgrade pip uv
        rm -rf ./config/requirements/*.txt; \
        uv pip compile --upgrade --generate-hashes --output-file config/requirements/prod_lock.txt config/requirements/prod.in; \
        uv pip compile --upgrade --generate-hashes --output-file config/requirements/dev_lock.txt config/requirements/dev.in; \

    - name: Generate diff and extract package upgrades
      id: diff
      run: |
        git diff > diff.txt
        python -c "
        import re
        import os
        
        with open('diff.txt') as f:
            diff = f.read()
        
        # Find all the packages that were upgraded
        packages = re.findall(r'\+\s*([a-zA-Z0-9-]+)==([0-9\.]+)', diff)
        
        upgrades = []
        for pkg, new_ver in packages:
            # Find the old version of the package
            old_ver_match = re.search(r'-\s*' + re.escape(pkg) + r'==([0-9\.]+)', diff)
            if old_ver_match:
                old_ver = old_ver_match.group(1)
                upgrades.append((pkg, old_ver, new_ver))
        
        upgrades_str = "\n".join(f'{pkg} from {old_ver} to {new_ver}' for pkg, old_ver, new_ver in upgrades)
        
        # Write the output value to a file
        with open(os.environ.get('GITHUB_ENV'), 'a') as f:
            f.write(f'upgrades={upgrades_str}')
        "
        cat $GITHUB_ENV > $GITHUB_OUTPUT
        rm diff.txt

    - name: Show package upgrades
      run: |
          echo "${{ steps.diff.outputs.upgrades }}"

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        title: "Upgrade Python packages"
        commit-message: |
          Upgrade Python packages
          
          Upgrades:
          ${{ steps.diff.outputs.upgrades }}"
        body: "Python package upgrades:\n${{ steps.diff.outputs.upgrades }}"
        branch: "task/upgrade-python-packages"
